「次のタスクを実行してください。目的は、YouTubeのプレイリストに新しい動画が追加された際に、LINEで通知を送るシステムを構築することです。スプレッドシートでプレイリストの情報を管理し、YouTube APIとLINE Messaging APIを使用して、動画数が増えた際に通知を行います。」

### **1. YouTube APIの設定と認証**

- YouTube Data APIを有効化し、APIキーを取得。
- `UrlFetchApp`を使ってYouTube Data APIからプレイリストの動画数を取得するコードを作成してください。

### **2. LINE Messaging APIの設定と認証**

- LINE DevelopersコンソールでMessaging APIを設定し、アクセストークンとユーザーIDを取得。
- `UrlFetchApp`を使ってLINE APIから通知を送るコードを作成してください。

### **3. スプレッドシートの準備**

- スプレッドシートに次の3列を設定してください：
    - **A列**: プレイリスト名
    - **B列**: プレイリストURL
    - **C列**: プレイリストの動画数（初期状態として設定）

### **4. 動画数の取得と比較**

- プレイリストのURLからプレイリストIDを抽出し、YouTube APIを使って現在の動画数を取得する関数を作成してください。
- スプレッドシートに保存されている動画数（C列）と現在の動画数を比較し、異なる場合にはLINEで通知を送るようにしてください。

### **5. LINE通知システムの実装**

- 動画数が変更された場合、LINE Messaging APIを使用して通知を送るコードを作成してください。通知内容は以下のように設定してください：
    - 「YouTubeプレイリストに新しい動画が追加されました！」
    - プレイリスト名、プレイリストURL、前の動画数、新しい動画数を表示する。

### **6. トリガー設定**

- 定期的にスクリプトが実行されるように、GASの時間主導型トリガーを設定してください。例えば、毎日1回、プレイリストの動画数をチェックして通知を送るようにします。

### **7. テストとデバッグ**

- スクリプトが正常に動作することを確認するためにテストを行い、プレイリストURLが更新された際に動画数が正しく記録され、LINE通知が送信されることを確認してください。

### **8. 運用とメンテナンス**

- システムが稼働した後は、APIの制限を考慮し、必要に応じてプレイリストのURL追加や削除を行います。また、API仕様変更に備えたメンテナンスも行ってください。